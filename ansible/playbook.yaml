---
- name: Basic System Update and Hostname Check
  hosts: all
  become: yes

  tasks:
    - name: Check hostname
      debug:
        msg: "Connected to {{ inventory_hostname }} at {{ ansible_host }}"
    - name: Ensure system is up to date
      apt:
        update_cache: yes
        upgrade: dist
    - name: Install essential packages
      apt:
        name:
          - wget
          - curl
          - vim
          - openssl
          - git
        state: present
        update_cache: yes
    - name: Copy colored bashrc to root
      copy:
        src: files/.bashrc
        dest: /root/.bashrc
        owner: root
        group: root
        mode: "0644"
        backup: yes

- name: Distribute SSH Key to Kubernetes Nodes
  hosts: k8s_cluster
  become: yes

  tasks:
    - name: Ensure .ssh directory exists
      file:
        path: /root/.ssh
        state: directory
        mode: "0700"
        owner: root
        group: root

    - name: Copy jumpbox public key to authorized_keys
      authorized_key:
        user: root
        state: present
        key: "{{ lookup('file', 'files/id_ed25519.pub') }}"

- name: Configure Hostnames and Disable Cloud-Init Management
  hosts: k8s_cluster
  become: yes

  tasks:
    - name: Disable cloud-init management of /etc/hosts
      lineinfile:
        path: /etc/cloud/cloud.cfg
        regexp: "^manage_etc_hosts:"
        line: "manage_etc_hosts: false"
        backup: yes
      ignore_errors: yes

    - name: Set hostname using hostnamectl
      hostname:
        name: "{{ inventory_hostname }}"

    - name: Update /etc/hosts with FQDN mapping for 127.0.1.1
      lineinfile:
        path: /etc/hosts
        regexp: '^127\.0\.1\.1'
        line: "127.0.1.1\t{{ inventory_hostname }}.kubernetes.local {{ inventory_hostname }}"
        backup: yes

    - name: Restart systemd-hostnamed to apply changes
      systemd:
        name: systemd-hostnamed
        state: restarted

- name: Add Kubernetes Cluster Hosts to /etc/hosts
  hosts: all
  become: yes

  tasks:
    - name: Check if k8s hosts entries already exist
      shell: grep -q "# Kubernetes The Hard Way" /etc/hosts
      register: k8s_hosts_exist
      ignore_errors: yes
      changed_when: false

    - name: Append Kubernetes cluster hosts to /etc/hosts
      blockinfile:
        path: /etc/hosts
        block: "{{ lookup('file', 'files/k8s-hosts') }}"
        marker: "# {mark} ANSIBLE MANAGED BLOCK - K8S HOSTS"
        backup: yes
      when: k8s_hosts_exist.rc != 0
